server:
  port: ${PORT:8080}
  forward-headers-strategy: framework

spring:
  datasource:
    url: jdbc:postgresql://dpg-d3t5oebipnbc738f5bl0-a.singapore-postgres.render.com:5432/mini_app_a32f
    username: mini_app_a32f_user
    password: MT7TbJRbBnoxy10ttCq3AKMLMn27dH8M
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: main-pool
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 60000
      max-lifetime: 1800000
      connection-timeout: 15000

  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc.time_zone: UTC

  jackson:
    time-zone: Asia/Bangkok
    default-property-inclusion: non_null
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false

  flyway:
    enabled: true
    locations: classpath:db/migration

logging:
  level:
    root: INFO
    example.backend_mini_app: DEBUG
    org.springframework.web.reactive.function.client.ExchangeFunctions: WARN
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,loggers,env

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /docs
    operationsSorter: method
    tagsSorter: alpha

docs:
  groups:
    - name: public
      description: Public APIs
      enabled: true
      requireJwt: false
      marker: publicApi
      packages: [ "example.backend_mini_app.controller" ]
      includePaths: [ "/api/**" ]
      servers:
        - http://localhost:8080
        - https://api.example.com

    - name: internal
      description: Internal APIs
      enabled: true
      requireJwt: true
      marker: internalApi
      packages: [ "example.backend_mini_app.controller" ]
      includePaths: [ "/api/**" ]
      servers:
        - http://localhost:8080
        - https://internal.example.com

app:
  cors:
    allowed-origins: "http://localhost:3000"
    allowed-methods: "GET,POST,PUT,PATCH,DELETE,OPTIONS"
    allowed-headers: "*"
    allow-credentials: true

  jwt:
    secret: yY7dv8dW0Dudg1c8oJdVt1l4Ig2vN9v5A0yD3bS2C7I=
    issuer: miniapp-be
    access-token-ttl-minutes: 60
    refresh-token-ttl-days: 7

  http:
    userAgent: MiniApp-BE/1.0
    connectTimeoutMs: 5000
    readTimeoutMs: 10000
    writeTimeoutMs: 10000
    maxInMemorySizeMb: 10

  clients:
    zalo:
      baseUrl: https://graph.zalo.me
      accept: "application/json, text/json"
    internalApi:
      baseUrl: http://localhost:8080
      accept: "application/json"
    weather:
      baseUrl: https://api.weatherapi.com/v1
      accept: application/json

  weather:
    key: 379eeea5dba84ccd86970651252210
    ward:
      lat: 20.941
      lon: 106.333
  minio:
    endpoint: http://127.0.0.1:9000
    accessKey: minioadmin
    secretKey: minioadmin
    bucket: mybucket
    presignExpirySeconds: 900
  cdn:
    baseUrl: http://127.0.0.1:9000/mybucket

zalo:
  oauth:
    app-id: 2946865265707862717
    app-secret: e4AqUBRGV2N8S8CXV38P
    default-redirect-uri: "http://localhost:3000/auth/zalo/callback"
    scope: "profile"
    auth-url:  "https://oauth.zaloapp.com/v4/permission"
    token-url: "https://oauth.zaloapp.com/v4/access_token"
    userinfo-url: "https://graph.zalo.me/v2.0/me"
    state-ttl-seconds: 600
